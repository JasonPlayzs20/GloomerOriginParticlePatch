plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "gloomer" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
    runs {
        client {
            client()
            configName = "Fabric Client"
            ideConfigGenerated = true
            runDir = "run"
        }
    }
}

fabricApi {
    configureDataGeneration {
        client = true
    }
}

repositories {
    maven {
        name = "Ladysnake Libs"
        url = "https://maven.ladysnake.org/releases"
    }
    maven {
        name = "CurseMaven"
        url = "https://cursemaven.com"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Origins from CurseMaven
    modImplementation files("libs/Origins-1.20.1-1.10.0.jar")

    modImplementation files("libs/Calio-1.20.2-1.13.3.jar")

    // Cardinal Components API (required by Origins)
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.2"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories {
    }
}